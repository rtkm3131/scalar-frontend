{"version":3,"sources":["Components/NavBar/NavBar.js","config/config.js","Components/InterviewList/InterviewList.js","useFetch.js","Components/Home/Home.js","Components/ScheduleInterview/ScheduleInterview.js","Components/InterviewDetails/InterviewDetails.js","Components/AddParticipant/AddParticipant.js","App.js","index.js"],"names":["Link","styled","a","Nav","div","NavBar","className","href","API_URL","Div","Span","span","P","p","H2","h2","Footer","Cards","InterviewList","interviews","title","map","interview","idx","to","pathname","uuid","style","textDecoration","backgroundColor","format","endTime","startTime","onClick","fetch","method","then","res","ok","json","text","Error","data","console","log","alert","window","location","reload","catch","err","JSON","parse","message","useFetch","url","useState","setData","isPending","setIsPending","error","setError","useEffect","abortController","AbortController","signal","status","name","abort","Home","length","Button","button","Button2","ScheduleInterview","candidateData","isCandidateDataPending","candidateDataError","interviewerData","isInterviewerDataPending","interviewerDataError","animatedComponents","makeAnimated","Date","date","setDate","setStartTime","setEndTime","candidates","setCandidates","interviewers","setInterviewers","history","useHistory","getOptions","options","d","push","label","email","value","onSubmit","e","preventDefault","participants","interviewer","candidate","moment","headers","body","stringify","type","required","onChange","target","isMulti","closeMenuOnSelect","components","classNamePrefix","selectedOption","disabled","InterviewDetails","useParams","participant","DivB","AddParticipant","setName","setEmail","role","setRole","handleSubmit","send","placeholder","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08db301d.chunk.js","sourcesContent":["// import { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport './NavBar.css';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Nav className=\"navbar\">\r\n      <h1>Interview Scheduler</h1>\r\n      <div className=\"links\">\r\n        <Link href=\"/\">Home</Link>\r\n        <Link href=\"/schedule\">\r\n          New Interview\r\n          \r\n        </Link>\r\n\r\n        <Link href=\"/add\">\r\n          Add Participant\r\n          \r\n        </Link>\r\n        \r\n      </div>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst Link = styled.a`\r\nfont-size: 1.2rem;\r\nfont-weight: 500;\r\n&:hover{\r\n  color: #f1356d;\r\n}\r\n`;\r\n\r\n\r\n\r\nconst Nav = styled.div`\r\nborder-bottom: 2px solid #212529;\r\n`;\r\n\r\nexport default NavBar;\r\n","export const API_PORT = 5000;\r\nexport const API_URL = `http://localhost:${API_PORT}`;\r\n","import Moment from \"react-moment\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\nimport { API_URL } from \"../../config/config.js\";\r\nimport './InterviewList.css';\r\n\r\nconst InterviewList = ({ interviews, title }) => {\r\n  const handleDelete = (uuid) => {\r\n    fetch(`${API_URL}/v1/interviews/${uuid}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return res.text().then((text) => {\r\n          throw new Error(text);\r\n        });\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        console.log(\"Successfully deleted interview\");\r\n        alert(\"Successfully deleted Interview\");\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        const data = JSON.parse(err.message);\r\n        alert(data.message);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Div>\r\n      <h1>{title}</h1>\r\n      {interviews.map((interview, idx) => (\r\n        <Cards key={interview.uuid}>\r\n          <Link\r\n            to={{\r\n              pathname: `/interview/${interview.uuid}`,\r\n            }}\r\n            className=\"black-bg\"\r\n            style={{ textDecoration: \"none\" , backgroundColor:\"black\"}}\r\n          >\r\n            <div className=\"black-bg\">\r\n              <H2 className=\"black-bg\">Interview {idx + 1}</H2>\r\n              <P>\r\n                Date: <Moment format=\"DD-MM-YYYY\"><Span>{interview.endTime}</Span></Moment>\r\n                {/* Date: <Span>{interview.endTime}</Span>  */}\r\n              </P>\r\n              <P>\r\n                StartTime:{\" \"}\r\n                <Moment format=\"hh:mm A\"><Span>{interview.startTime}</Span></Moment>\r\n                {/* <Span>{interview.startTime}</Span> */}\r\n              </P>\r\n              <P>\r\n                EndTime: <Moment format=\"hh:mm A\"><Span>{interview.endTime}</Span></Moment>\r\n                {/* EndTime: <Span>{interview.endTime}</Span> */}\r\n              </P>\r\n            </div>\r\n          </Link>\r\n          <Footer>\r\n          <Link\r\n            to={{\r\n              pathname: `/reschedule/${interview.uuid}`,\r\n            }}\r\n          >\r\n            <button className=\"green-btn\">Reschedule or Edit</button>\r\n          </Link>\r\n          <button\r\n            className=\"red-btn\"\r\n            style={{\"marginLeft\":\"10px\"}}\r\n            onClick={() => {\r\n              handleDelete(interview.uuid);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n            </Footer>\r\n       \r\n        </Cards>\r\n      ))}\r\n    </Div>\r\n  );\r\n};\r\n\r\n\r\nconst Div = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n// border: 1px solid black;\r\nborder-radius: 10px;\r\npadding: 6px;\r\n`;\r\n// const Div2 = styled.div`\r\n// background-color: black !important;\r\n// `;\r\nconst Span = styled.span`\r\nbackground-color: black !important;\r\n`;\r\n\r\nconst P = styled.p`\r\nbackground-color: black !important;\r\npadding: 2px;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\nbackground-color: black !important;\r\n`\r\n\r\nconst Footer = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-top: 5px;\r\nbackground-color: black !important;\r\n\r\n`;\r\n\r\nconst Cards = styled.div`\r\npadding: 10px 16px;\r\nmargin: 20px 0;\r\nborder: 1px solid black;\r\nborder-radius: 10px;\r\nbackground-color: black !important;\r\nheight: 8rem;\r\n`;\r\n\r\n\r\nexport default InterviewList;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    fetch(url, { signal: abortController.signal })\r\n      .then((res) => {\r\n        if (!res.ok)\r\n          throw new Error(`Unable to fetch data. Status Code: ${res.status}`);\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setData(data.data);\r\n        setIsPending(false);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        if (err.name === \"AbortFetch\") console.log(\"fetch aborted!\");\r\n        else {\r\n          setError(err.message);\r\n          setIsPending(false);\r\n        }\r\n      });\r\n    return () => abortController.abort();\r\n  }, [url]);\r\n\r\n  return { data, error, isPending };\r\n};\r\n\r\nexport default useFetch;\r\n","import InterviewList from \"../InterviewList/InterviewList\";\r\nimport useFetch from \"../../useFetch\";\r\nimport { API_URL } from \"../../config/config.js\";\r\n\r\nconst Home = () => {\r\n  const {\r\n    data: interviews,\r\n    isPending,\r\n    error,\r\n  } = useFetch(`${API_URL}/v1/interviews/upcoming`);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {error && <div>{\"Unable to fetch interviews\"}</div>}\r\n      {isPending && <div>Loading...</div>}\r\n      {interviews && interviews.length > 0 && error == null && (\r\n        <InterviewList interviews={interviews} title={\"Upcoming Interviews\"} />\r\n      )}\r\n      {interviews && interviews.length <= 0 && error == null && (\r\n        <div>No Upcoming interviews.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport useFetch from \"../../useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API_URL } from \"../../config/config.js\";\r\nimport './ScheduleInterview.css';\r\nimport styled from 'styled-components';\r\n\r\nconst ScheduleInterview = () => {\r\n  const {\r\n    data: candidateData,\r\n    isPending: isCandidateDataPending,\r\n    error: candidateDataError,\r\n  } = useFetch(`${API_URL}/v1/participants/candidates`);\r\n\r\n  const {\r\n    data: interviewerData,\r\n    isPending: isInterviewerDataPending,\r\n    error: interviewerDataError,\r\n  } = useFetch(`${API_URL}/v1/participants/interviewers`);\r\n\r\n  const animatedComponents = makeAnimated();\r\n  const [date, setDate] = useState(new Date());\r\n  const [startTime, setStartTime] = useState(new Date());\r\n  const [endTime, setEndTime] = useState(new Date());\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [interviewers, setInterviewers] = useState([]);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const getOptions = (data) => {\r\n    console.log(data);\r\n    const options = [];\r\n    for (let d of data) {\r\n      options.push({ label: d.email, value: d.email });\r\n    }\r\n    return options;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    setIsPending(true);\r\n    e.preventDefault();\r\n    const participants = [];\r\n    for (let interviewer of interviewers) {\r\n      participants.push(interviewer.value);\r\n    }\r\n    for (let candidate of candidates) {\r\n      participants.push(candidate.value);\r\n    }\r\n    const stime = moment(\r\n      `${date} ${startTime}`,\r\n      \"YYYY-MM-DD HH:mm:ss\"\r\n    ).format();\r\n    const etime = moment(`${date} ${endTime}`, \"YYYY-MM-DD HH:mm:ss\").format();\r\n\r\n    const interview = {\r\n      startTime: stime,\r\n      endTime: etime,\r\n      participants: participants,\r\n    };\r\n    console.log(interview);\r\n\r\n    fetch(`${API_URL}/v1/interviews`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(interview),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return res.text().then((text) => {\r\n          throw new Error(text);\r\n        });\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setIsPending(false);\r\n        console.log(\"Successfully added interview\");\r\n        alert(\r\n          \"Successfully scheduled interview! and email notification is sent.\"\r\n        );\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        const data = JSON.parse(err.message);\r\n        alert(data.message);\r\n        setIsPending(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h1>Schedule a new interview</h1>\r\n      <br></br>\r\n      {(candidateDataError || interviewerDataError) && (\r\n        <div>{\"Unable to fetch participants information\"}</div>\r\n      )}\r\n      {(isCandidateDataPending || isInterviewerDataPending) && (\r\n        <div>Loading...</div>\r\n      )}\r\n      {candidateData && interviewerData && (\r\n        <form onSubmit={handleSubmit}>\r\n          <label>Choose Date : </label>\r\n          <input\r\n            type=\"date\"\r\n            required\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n          <label>Start Time : </label>\r\n          <input\r\n            type=\"time\"\r\n            value={startTime}\r\n            required\r\n            onChange={(e) => setStartTime(e.target.value)}\r\n          />\r\n          <label>End Time : </label>\r\n          <input\r\n            type=\"time\"\r\n            value={endTime}\r\n            required\r\n            onChange={(e) => setEndTime(e.target.value)}\r\n          />\r\n          <label>Select Candidates : </label>\r\n          <Select\r\n            isMulti\r\n            closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            name=\"candidates\"\r\n            options={getOptions(candidateData)}\r\n            className=\"basic-multi-select\"\r\n            classNamePrefix=\"select\"\r\n            onChange={(selectedOption) => {\r\n              setCandidates(selectedOption);\r\n              console.log(\"candidates selected\", selectedOption);\r\n            }}\r\n          />\r\n          <label>Select Interviewers : </label>\r\n          <Select\r\n            isMulti\r\n            closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            name=\"interviewers\"\r\n            options={getOptions(interviewerData)}\r\n            className=\"basic-multi-select\"\r\n            classNamePrefix=\"select\"\r\n            onChange={(selectedOption) => {\r\n              setInterviewers(selectedOption);\r\n              console.log(\"interviewers selected\", selectedOption);\r\n            }}\r\n          />\r\n          {!isPending && <Button>Schedule Interview</Button>}\r\n          {isPending && <Button2 disabled>Adding Interview...</Button2>}\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Button = styled.button`\r\nbackground-color: #18a558 !important;\r\n`;\r\nconst Button2 = styled.button`\r\nbackground-color: #f1456d !important;\r\n`;\r\n\r\nexport default ScheduleInterview;\r\n","import { useParams } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport useFetch from \"../../useFetch\";\r\nimport { API_URL } from \"../../config/config.js\";\r\nimport './InterviewDetails.css';\r\nconst InterviewDetails = () => {\r\n  const { uuid } = useParams();\r\n  const {\r\n    data: interview,\r\n    isPending,\r\n    error,\r\n  } = useFetch(`${API_URL}/v1/interviews/${uuid}`);\r\n\r\n  return (\r\n    <div className=\"interview-details\">\r\n      {error && <div>{error}</div>}\r\n      {isPending && <div>Loading...</div>}\r\n      {interview && (\r\n        <div className=\"details\">\r\n          <h1>Interview Details</h1>\r\n          <h2>id: {uuid}</h2>\r\n          <br></br>\r\n          <h4>\r\n            Date: <Moment format=\"DD-MM-YYYY\">{interview.startTime}</Moment>\r\n          </h4>\r\n          <h4>\r\n            Timings: <Moment format=\"hh:mm A\">{interview.startTime}</Moment> -{\" \"}\r\n            <Moment format=\"hh:mm A\">{interview.endTime}</Moment>\r\n          </h4>\r\n          <br></br>\r\n          <h4>Participants</h4>\r\n          <ul>\r\n            {interview.participants.map((participant, idx) => (\r\n              <li>{participant.email}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default InterviewDetails;\r\n","import { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport useFetch from \"../../useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API_URL } from \"../../config/config.js\";\r\nimport './AddParticipant.css';\r\nimport styled from 'styled-components';\r\n\r\nconst AddParticipant = () => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [role, setRole] = useState(\"Enter Role\");\r\n    const roles = [\"Interviewer\",\"Candidate\"];\r\n    const animatedComponents = makeAnimated();\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const getOptions = (data) => {\r\n        console.log(data);\r\n        const options = [];\r\n        for (let d of data) {\r\n          options.push({ label: d, value: d });\r\n        }\r\n        return options;\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n      const handleSubmit = async(e) => {\r\n        setIsPending(true);\r\n        e.preventDefault();\r\n        console.log(`name is ${name}, email is ${email}, role is ${role.value}`);\r\n        console.log(role.value);\r\n\r\n        const send = {\r\n            name: name,\r\n            email: email,\r\n            role: role.value\r\n        }\r\n\r\n        if(role.value === \"Interviewer\")\r\n        {\r\n            fetch(`${API_URL}/v1/participants/interviewer`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(send),\r\n              })\r\n                .then((res) => {\r\n                  if (res.ok) {\r\n                    return res.json();\r\n                  }\r\n                  return res.text().then((text) => {\r\n                    throw new Error(text);\r\n                  });\r\n                })\r\n                .then((data) => {\r\n                  console.log(data);\r\n                  setIsPending(false);\r\n                  console.log(\"Successfully added participant\");\r\n                  alert(\r\n                    `Successfully Added ${role.value}.`\r\n                  );\r\n                  history.push(\"/\");\r\n                })\r\n                .catch((err) => {\r\n                  const data = JSON.parse(err.message);\r\n                  alert(data.message);\r\n                  setIsPending(false);\r\n                  console.log(err);\r\n                });\r\n        }\r\n        else{\r\n\r\n\r\n            fetch(`${API_URL}/v1/participants/candidate`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(send),\r\n              })\r\n                .then((res) => {\r\n                  if (res.ok) {\r\n                    return res.json();\r\n                  }\r\n                  return res.text().then((text) => {\r\n                    throw new Error(text);\r\n                  });\r\n                })\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    setIsPending(false);\r\n                    console.log(\"Successfully added participant\");\r\n                    alert(\r\n                      `Successfully Added ${role.value}.`\r\n                    );\r\n                    history.push(\"/\");\r\n                })\r\n                .catch((err) => {\r\n                  const data = JSON.parse(err.message);\r\n                  alert(data.message);\r\n                  setIsPending(false);\r\n                  console.log(err);\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        setIsPending(false);\r\n       \r\n      };\r\n \r\n  return (\r\n    <Div>\r\n        <form onSubmit={handleSubmit}>\r\n            <Div>\r\n                <label style={{\"marginBottom\":\"10px\"}}>Enter Name : </label>\r\n                <input\r\n                className=\"inputT\"\r\n                placeholder=\"Enter Name\"\r\n                    type=\"text\"\r\n                    required\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n            </Div>\r\n\r\n            <Div>\r\n                <label style={{\"marginBottom\":\"10px\"}}>Set Email : </label>\r\n                <input\r\n                    className=\"inputT\"\r\n                    placeholder=\"Enter Email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    required\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </Div>\r\n\r\n          \r\n          <Div>\r\n            <label style={{\"marginBottom\":\"10px\"}}>Select Role : </label>\r\n            <Select\r\n                \r\n                closeMenuOnSelect={true}\r\n                components={animatedComponents}\r\n                name=\"roles\"\r\n                options={getOptions(roles)}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={(selectedOption) => {\r\n                setRole(selectedOption);\r\n                console.log(\"candidates selected\", selectedOption);\r\n                }}\r\n            />\r\n          </Div>\r\n         \r\n          <DivB>\r\n            {!isPending && <Button>Schedule Interview</Button>}\r\n            {isPending && <Button2 disabled>Adding Interview...</Button2>}\r\n          </DivB>\r\n         \r\n          \r\n        </form>\r\n      \r\n    </Div>\r\n  );\r\n};\r\n\r\nconst Button = styled.button`\r\nbackground-color: #18a558 !important;\r\n`;\r\nconst Button2 = styled.button`\r\nbackground-color: #f1456d !important;\r\n`;\r\n\r\nconst Div = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin-top: 20px;\r\n`;\r\n\r\nconst DivB = styled.div`\r\nmargin-top: 10px;\r\n`;\r\n\r\n\r\nexport default AddParticipant;\r\n","import NavBar from \"./Components/NavBar\\/NavBar\";\r\nimport Home from \"./Components/Home/Home\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ScheduleInterview from \"./Components/ScheduleInterview/ScheduleInterview\";\r\nimport InterviewDetails from \"./Components/InterviewDetails/InterviewDetails\";\r\nimport RescheduleInterview from \"./Components/ScheduleInterview/ScheduleInterview\";\r\nimport AddParticipant from \"./Components/AddParticipant/AddParticipant\";\r\n\r\nimport './index.css';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <NavBar />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/schedule\">\r\n              <ScheduleInterview />\r\n            </Route>\r\n            <Route exact path=\"/add\">\r\n              <AddParticipant />\r\n            </Route>\r\n            <Route path=\"/schedule\">\r\n              <ScheduleInterview />\r\n            </Route>\r\n            <Route path=\"/interview/:uuid\">\r\n              <InterviewDetails />\r\n            </Route>\r\n            <Route path=\"/reschedule/:uuid\">\r\n              <RescheduleInterview />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}